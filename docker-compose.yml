version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cardioai_postgres
    environment:
      POSTGRES_DB: cardioai_pro
      POSTGRES_USER: cardioai
      POSTGRES_PASSWORD: cardioai_dev_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/docker/postgres/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cardioai -d cardioai_pro"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cardioai_redis
    command: redis-server --appendonly yes --requirepass cardioai_redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # FastAPI Backend
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cardioai_api
    environment:
      - DATABASE_URL=postgresql+asyncpg://cardioai:cardioai_dev_password@postgres:5432/cardioai_pro
      - REDIS_URL=redis://:cardioai_redis_password@redis:6379/0
      - SECRET_KEY=dev_secret_key_change_in_production
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
    volumes:
      - ./backend:/app
      - ./models:/app/models
      - ./data:/app/data
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cardioai_celery
    command: celery -A app.core.celery worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql+asyncpg://cardioai:cardioai_dev_password@postgres:5432/cardioai_pro
      - REDIS_URL=redis://:cardioai_redis_password@redis:6379/0
      - SECRET_KEY=dev_secret_key_change_in_production
      - ENVIRONMENT=development
    volumes:
      - ./backend:/app
      - ./models:/app/models
      - ./data:/app/data
    depends_on:
      - postgres
      - redis
      - api

  # Celery Beat Scheduler
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cardioai_celery_beat
    command: celery -A app.core.celery beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql+asyncpg://cardioai:cardioai_dev_password@postgres:5432/cardioai_pro
      - REDIS_URL=redis://:cardioai_redis_password@redis:6379/0
      - SECRET_KEY=dev_secret_key_change_in_production
      - ENVIRONMENT=development
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cardioai_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - api

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: cardioai_nginx
    volumes:
      - ./infrastructure/docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infrastructure/docker/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
      - frontend

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: cardioai_network
