apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: cardioai-pro
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "cardioai_rules.yml"
    
    scrape_configs:
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https
      
      - job_name: 'cardioai-api'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - cardioai-pro
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: api
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          action: keep
          regex: http
      
      - job_name: 'cardioai-celery'
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
            - cardioai-pro
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_label_app]
          action: keep
          regex: celery-worker
      
      - job_name: 'cast-ai-metrics'
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
            - cardioai-pro
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_label_app]
          action: keep
          regex: cast-ai-agent
  
  cardioai_rules.yml: |
    groups:
    - name: cardioai.rules
      rules:
      - alert: HighECGProcessingLatency
        expr: histogram_quantile(0.95, rate(ecg_analysis_duration_seconds_bucket[5m])) > 10
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "High ECG processing latency detected"
          description: "95th percentile latency is {{ $value }} seconds"
      
      - alert: ECGAnalysisQueueBacklog
        expr: ecg_analysis_queue_length > 50
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "ECG analysis queue backlog detected"
          description: "Queue length is {{ $value }} analyses"
      
      - alert: HighMemoryUsage
        expr: (container_memory_usage_bytes / container_spec_memory_limit_bytes) > 0.9
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is {{ $value | humanizePercentage }}"
      
      - alert: CostOptimizationOpportunity
        expr: cast_ai_cost_savings_potential > 1000
        for: 10m
        labels:
          severity: info
        annotations:
          summary: "Cost optimization opportunity detected"
          description: "Potential savings: ${{ $value }} per month"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: cardioai-pro
  labels:
    app: prometheus
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
        component: monitoring
    spec:
      serviceAccountName: prometheus-service-account
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config-volume
          mountPath: /etc/prometheus
        - name: prometheus-storage
          mountPath: /prometheus
        args:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--storage.tsdb.retention.time=30d'
        - '--web.enable-lifecycle'
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
      volumes:
      - name: prometheus-config-volume
        configMap:
          name: prometheus-config
      - name: prometheus-storage
        persistentVolumeClaim:
          claimName: prometheus-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: cardioai-pro
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: cardioai-pro
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: fast-ssd
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-service-account
  namespace: cardioai-pro
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-cluster-role
rules:
- apiGroups: [""]
  resources: ["nodes", "nodes/proxy", "services", "endpoints", "pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-cluster-role
subjects:
- kind: ServiceAccount
  name: prometheus-service-account
  namespace: cardioai-pro
